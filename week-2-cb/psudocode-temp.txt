


piece.move()
    
    ...
    
    IF (possiblePrevious.find(positionTo) != possiblePrevious.end())
        // En-Passant
        IF ((24 >= indexFrom <= 31) or (32 >= indexFrom <= 39)) AND board[positionTo].getType() = PAWN
            board[positionTo] <- board[positionFrom];
            board[positionFrom] <- Empty(); // constructor

            IF board[positionFrom].getIsBlack()
                // black attacking
                board[positionFrom + 8] <- Empty();
                RETURN true;
            ELSE 
                // white attacking
                board[positionFrom - 8] <- Empty(); 
                RETURN true;

        // Castling
        ELSE IF (isCastling)
            // Queen's castle White
            IF !board[positionFrom].isblack() AND positionTo = 2
                board[2] <- board[4];
                board[3] <- board[0];
                board[0] <- Empty();
                board[4] <- Empty();

            // King's castle White
            ELSE IF !board[positionFrom].isblack() AND positionTo = 6
                board[6] <- board[4];
                board[5] <- board[7];
                board[7] <- Empty();
                board[4] <- Empty();

            // Queen's castle black
            ELSE IF board[positionFrom].isblack() AND positionTo = 58
                board[58] <- board[60];
                board[59] <- board[56];
                board[56] <- Empty();
                board[60] <- Empty();

            // King's castle Black
            ELSE IF !board[positionFrom].isblack() AND positionTo = 62
                board[62] <- board[60];
                board[61] <- board[63];
                board[63] <- Empty();
                board[60] <- Empty();

        // Default Move
        ELSE
            board[positionTo] <- board[positionFrom];
            board[positionFrom] <- EMPTY(); // constructor
            RETURN true;

    // Promotion 
    IF Board[positionTo].getPieceType() = PAWN
        // White
        IF 56 >= postionTo <= 63 AND !board[postionTo].getIsBlack()
            board[positionTo] <- Queen(!isBlack)
    
        // black
        ELSE IF 0 >= postionTo <= 7 AND board[postionTo].getIsBlack()
            board[positionTo] <- Queen(isBlack)


pawn.getPossibleMoves(board, posFrom)
    
    .....

    index = pos.getIndex()
    piece = board.getPieceAt[index]    

    // En-Passant
    // White attacking
    IF 32 >= indexFrom <= 39 AND pieceFrom.getIsBlack() // piece is on row 5 and is White
        IF board.isPieceAt(indexFrom++) AND                                     // right piece exist 
                !board.getPieceAt(indexFrom++).getIsBlack() AND                 // right piece is black
                board.isPieceAt(indexFrom).getPieceAt(index +9) = EMPTY         // is destination empty
            possible.insert(index +9)

        IF board.isPieceAt(indexFrom--) AND                                     // left piece exist
                !board.getPieceAt(indexFrom--).getIsBlack() AND                 // left piece is black
                board.isPieceAt(indexFrom).getPieceAt(index +7) = EMPTY         // is destination empty
            possible.insert(index +7)

    // black attacking
    ELSE IF 24 >= indexFrom <= 31 AND pieceFrom.getIsBlack() // piece is on row 4 and is black
        IF board.isPieceAt(indexFrom++) AND                                     // right piece exist 
                !board.getPieceAt(indexFrom++).getIsBlack() AND                 // right piece is white
                board.isPieceAt(indexFrom).getPieceAt(index -7) = EMPTY         // is destination empty
            possible.insert(index -7)

        IF board.isPieceAt(indexFrom--) AND                                     // left piece exist
                !board.getPieceAt(indexFrom--).getIsBlack() AND                 // left piece is white
                board.isPieceAt(indexFrom).getPieceAt(index -9) = EMPTY         // is destination empty
            possible.insert(index -9)


king.getPosibleMoves(board, positionFrom)

    // cattleing
    indexFrom = positionFrom.getIndex()
    pieceFrom = board.getPieceAt[indexFrom]

    IF !piece.getIsBlack()
        // Queens castle
        if board.getPieceAt[1].getType() = EMPTY AND 
                board.getPieceAt[2].getType() = EMPTY AND 
                board.getPieceAt[3].getType() = EMPTY AND
                board.getPieceAt[4].getIsFirstMove() AND
                board.getPieceAt[0].getIsFirstMove()

            possible.insert(2)

        // king castle
        ELSE IF board.getPieceAt[1].getType() = EMPTY AND 
                board.getPieceAt[2].getType() = EMPTY ND 
                board.getPieceAt[3].getType() = EMPTY
                board.getPieceAt[4].getIsFirstMove() AND
                board.getPieceAt[7].getIsFirstMove()

            possible.insert(2)

    ELSE IF piece.getIsBlack()
        // Queens castle
        if board.getPieceAt[1].getType() = EMPTY AND
                board.getPieceAt[2].getType() = EMPTY ND 
                board.getPieceAt[3].getType() = EMPTY
                board.getPieceAt[60].getIsFirstMove() AND
                board.getPieceAt[56].getIsFirstMove()

            possible.insert(58)

        // king castle
        ELSE IF board.getPieceAt[1].getType() = EMPTY AND 
                board.getPieceAt[2].getType() = EMPTY ND 
                board.getPieceAt[3].getType() = EMPTY
                board.getPieceAt[60].getIsFirstMove() AND
                board.getPieceAt[63].getIsFirstMove()

            possible.insert(62)




